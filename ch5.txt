1. 서버사이드렌더링 준비하기
    - 브라우저에서 Home 컴포넌트가 실행되기 전 프론트 서버에서 백엔드 서버로 요청보내기
    - 리덕스 index 구조 수정
    - LOAD_USER_REQUEST,LOAD_POSTS_REQUEST처리가 끝날때까지 기다리고 렌더링하기

2. SSR시 쿠키 공유하기
    - LOAD_MY_INFO 액션 생성
    - SSR 요청은 프론트 서버가 백엔드 서버로 보내기 때문에 쿠키가 빠졌있다.
    - SSR 요청을 보내기 전 http 헤더에 쿠키를 추가해서 요청한다.

3. getStaticProps 사용해보기
    - about 페이지 만들기
    - getStaticProps에 LOAD_USER_REQUEST 요청 넣기
    - 다른 유저 정보 가져오기 라우터 생성(/user/1 GET)
    - 다른 정보 유출을 막기 위해 게시글,팔로우,팔로워 길이만 가져오기
    - getStaticProps는 정적 서비스, getServerSideProps는 동적 서비스에 사용
    - 프로필 페이지, 회원가입 페이지에도 SSR 적용

4. 다이나믹 라우팅
    - 게시글 url 주소를 지정하기 위해 다이나믹 라우팅 사용
    - 단일 게시글 요청 액션 생성, router 추가(/post/1 GET)
    - 단일 게시글에 해더 추가(타이틀, 메타 정보)
    - front/public/favicon.ico를 추가해서 favicon 적용

5. CSS 서버사이드렌더링
    - 처음 페이지에 접속 했을때 CCS가 적용되지 않는 문제가 있음
    - Next에서 제공되는 babel을 커스텀해서 어느정도 해결
    - npm i babel-plugin-styled-components 설치
    - _app.js를 감싸는 _document.js를 만들고, CSS SSR 코드 추가
    - 인터넷 익스플로러 지원을 위해 polyfill 추가

6. 사용자 게시글, 해시태그 게시글
    - 특정 사용자의 게시글만 볼 수 있는 페이지 만들기
    - user 폴더에 [id].js 파일 생성
    - 사용자 게시글, 해시태그 게시글 액션 생성(재사용 할 수 있는 state들은 다시 만들지 않는다)
    - 한 페이지에서 액션들이 같이 사용되지 않는다면 state을 공유할 수 있다.
    - /user/1/posts GET, /hashtag/노드 GET router 생성



